// <auto-generated />
using System;
using AgendaClinicaVivaEstetica.DAL.Contextos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AgendaClinicaVivaEstetica.DAL.Migrations
{
    [DbContext(typeof(DbContexto))]
    partial class DbContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AgendaClinicaVivaEstetica.Dominio.Entidades.Cliente", b =>
                {
                    b.Property<Guid>("IdCliente")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Celular");

                    b.Property<string>("Documento");

                    b.Property<string>("Nome");

                    b.Property<string>("Sobrenome");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("AgendaClinicaVivaEstetica.Dominio.Entidades.Endereco", b =>
                {
                    b.Property<Guid>("IdEndereco")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CEP");

                    b.Property<string>("Cidade");

                    b.Property<string>("Complemento");

                    b.Property<string>("Estado");

                    b.Property<Guid>("IdCliente");

                    b.Property<string>("Logradouro");

                    b.Property<string>("Numero");

                    b.HasKey("IdEndereco");

                    b.HasIndex("IdCliente")
                        .IsUnique();

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("AgendaClinicaVivaEstetica.Dominio.Entidades.Marcacao", b =>
                {
                    b.Property<Guid>("IdMarcacao")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataMarcacao");

                    b.Property<Guid>("IdCliente");

                    b.HasKey("IdMarcacao");

                    b.HasIndex("IdCliente");

                    b.ToTable("Marcacoes");
                });

            modelBuilder.Entity("AgendaClinicaVivaEstetica.Dominio.Entidades.Endereco", b =>
                {
                    b.HasOne("AgendaClinicaVivaEstetica.Dominio.Entidades.Cliente", "Cliente")
                        .WithOne("Endereco")
                        .HasForeignKey("AgendaClinicaVivaEstetica.Dominio.Entidades.Endereco", "IdCliente")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AgendaClinicaVivaEstetica.Dominio.Entidades.Marcacao", b =>
                {
                    b.HasOne("AgendaClinicaVivaEstetica.Dominio.Entidades.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
